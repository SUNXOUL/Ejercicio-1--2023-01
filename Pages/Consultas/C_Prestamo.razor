@page "/Prestamos"


@inject PrestamosBLL loans
@inject PersonasBLL Personas
<head>
    <link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-solid-rounded/css/uicons-solid-rounded.css'>
    <link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-solid-straight/css/uicons-solid-straight.css'>
    <link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-bold-rounded/css/uicons-bold-rounded.css'>
    <link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-solid-rounded/css/uicons-solid-rounded.css'>
    <style>
        .Agregar :hover{
            color: #0077B6;
        }
        .Agregar{
            text-decoration: none;
            color: black;
            padding: 5px;
            border: 5px;
            border-color:  #0077B6;
        }
        .Editar{
            padding: 5px;
            background-color: #00b4d8;
            color: black;
            text-decoration: none;
            font-weight: bold;
            border-radius: 25px;
        }
    </style>
    <style>
    </style>
</head>

<div style="display:flex; justify-content: space-between;">
<h3>Listado de  Prestamos</h3>
<a class="Agregar" href="R_Prestamo" style="border: 0px; "><i class="fi fi-sr-add"> Agregar</i> </a>
</div>
<br>
<h6>Buscar</h6>
<div style="display:flex;">
 <input type="PrestamoID" id="_PrestamoID" class="form-control" @bind="PrestamoId" placeholder="Ingrese ID">
<a type="button" href="Prestamo/@PrestamoId" class="btn btn-primary"><i class="fi fi-br-search"></i> </a>
</div>
<br>


    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false"
        FilterMode="FilterMode.Advanced" AllowGrouping="true" AllowSorting="true" AllowPaging="true"
        PagerHorizontalAlign="HorizontalAlign.Left" Data="loans.GetList()" TItem="Prestamo" ColumnWidth="200px"
        LogicalFilterOperator="LogicalFilterOperator.Or" ShowPagingSummary="true">
        <Columns>
            <RadzenDataGridColumn  TItem="Prestamo" Filterable="false" Sortable="false"  Frozen="true" Title="Acciones">
                <Template Context="Item">
                    <RadzenLink Path=@($"Prestamo/{Item.PrestamoId}") Text="Ver" />
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Prestamo"  Filterable="true" Sortable="true"  Property="PrestamoId" Title="ID"/>
            <RadzenDataGridColumn TItem="Prestamo"  Filterable="true" Sortable="true"  Property="F_Inicio" Title="Fecha Inicio"/>
            <RadzenDataGridColumn TItem="Prestamo"  Filterable="true" Sortable="true"  Property="F_Vencimiento" Title="Fecha Vencimiento"/>
            <RadzenDataGridColumn  TItem="Prestamo" Filterable="true" Sortable="true"  Frozen="true" Title="Persona">
                <Template Context="Item">
                @(Personas.Buscar(Item.PersonaId).Nombre)
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Prestamo"  Filterable="true" Sortable="true"  Property="Concepto" Title="Concepto"/>
            <RadzenDataGridColumn TItem="Prestamo"  Filterable="true" Sortable="true"  Property="Monto" Title="Monto"/>
            <RadzenDataGridColumn TItem="Prestamo"  Filterable="true" Sortable="true"  Property="Balance" Title="Balance"/>
            </Columns>
    </RadzenDataGrid>

@code {
        [Parameter]
    public int PrestamoId { get; set; }

    public Prestamo? Prestamo { get; set; } = new Prestamo();
    public Prestamo? PrestamoEncontrada { get; set; }


    protected override void OnInitialized()
    {
        if (PrestamoId > 0)
        {
            this.Prestamo.PrestamoId = PrestamoId;
            this.Buscar();
        }
    }

    public void Buscar()
    {

        var PrestamoEncontrada = loans.Buscar(Prestamo.PrestamoId);
        if (PrestamoEncontrada != null)
        {
            this.Prestamo = PrestamoEncontrada;
        }
    }

    public void Eliminar()
    {
        if(!loans.Existe(this.PrestamoId))
        {
            if(loans.Eliminar(this.Prestamo))
            {
                this.Prestamo= new Prestamo();
            }
            
        }
    }
}

