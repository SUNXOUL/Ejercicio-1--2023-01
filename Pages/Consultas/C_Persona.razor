@page "/Personas"

@inject PersonasBLL Persons
@inject PrestamosBLL loans
@inject OcupacionesBLL ocupations
@inject PagosBLL Pays

<head>
    <link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-solid-rounded/css/uicons-solid-rounded.css'>
    <link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-solid-straight/css/uicons-solid-straight.css'>
    <link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-bold-rounded/css/uicons-bold-rounded.css'>
    <link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-solid-rounded/css/uicons-solid-rounded.css'>
    <link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-bold-rounded/css/uicons-bold-rounded.css'>
    <style>
        .Agregar :hover {
            color: #0077B6;
        }

        .Agregar {
            text-decoration: none;
            color: black;
            padding: 5px;
            border: 5px;
            border-color: #0077B6;
        }

        .Editar {
            padding: 5px;
            background-color: #00b4d8;
            color: black;
            text-decoration: none;
            font-weight: bold;
            border-radius: 25px;
        }
    </style>
    <style>
    </style>
</head>

<div style="display:flex; justify-content: space-between;">
    <h3>Listado de Personas</h3>
    <div>
        <a class="Agregar" href="R_Persona" style="border: 0px; "><i class="fi fi-sr-add"> Agregar</i> </a>
    </div>
</div>
<br>
<h6>Buscar</h6>
<div style="display:flex;">
    <input type="PersonaId" id="_PersonaId" class="form-control" @bind="PersonaId" placeholder="Ingrese ID">
    <a type="button" href="Persona/@PersonaId" class="btn btn-primary"><i class="fi fi-br-search"></i> </a>
</div>
<br>
    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false"
        FilterMode="FilterMode.Advanced" AllowGrouping="true" AllowSorting="true" AllowPaging="true"
        PagerHorizontalAlign="HorizontalAlign.Left" Data="Persons.GetList()" TItem="Persona" ColumnWidth="200px"
        LogicalFilterOperator="LogicalFilterOperator.Or" ShowPagingSummary="true">
        <Columns>
            <RadzenDataGridColumn  TItem="Persona" Filterable="false" Sortable="false"  Frozen="true" Title="Acciones">
                <Template Context="Item">
                    <RadzenLink Path=@($"Persona/{Item.PersonaId}") Text="Ver" />
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Persona"  Filterable="true" Sortable="true"  Property="Nombre" Title="Nombre"/>
            <RadzenDataGridColumn TItem="Persona"  Filterable="true" Sortable="true"  Property="Telefono" Title="Telefono"/>
            <RadzenDataGridColumn TItem="Persona"  Filterable="true" Sortable="true"  Property="Celular" Title="Celular"/>
            <RadzenDataGridColumn TItem="Persona"  Filterable="true" Sortable="true"  Property="Balance" Title="Balance"/>
            <RadzenDataGridColumn TItem="Persona"  Filterable="true" Sortable="true"  Property="Email" Title="Email"/>
            <RadzenDataGridColumn TItem="Persona"  Filterable="true" Sortable="true"  Property="Direccion" Title="Direccion"/>
            <RadzenDataGridColumn TItem="Persona"  Filterable="true" Sortable="true"  Property="F_Nacimiento" Title="Fecha de Nacimiento"/>
            <RadzenDataGridColumn TItem="Persona"  Filterable="true" Sortable="true"  Property="Ocupacion" Title="Ocupacion"/>
            
            </Columns>
    </RadzenDataGrid>



@code {
    [Parameter]
    public int PersonaId { get; set; }

    public Persona? Persona { get; set; } = new Persona();
    public Persona? PersonaEncontrada { get; set; }


    protected override void OnInitialized()
    {
        if (PersonaId > 0)
        {
            this.Persona.PersonaId = PersonaId;
            this.Buscar();
        }
    }

    public void Buscar()
    {

        var PersonaEncontrada = Persons.Buscar(Persona.PersonaId);
        if (PersonaEncontrada != null)
        {
            this.Persona = PersonaEncontrada;
        }
    }

    public void Eliminar()
    {
        if (!Persons.Existe(this.PersonaId))
        {
            if (Persons.Eliminar(this.Persona))
            {
                this.Persona = new Persona();
            }

        }
        
    }

    
}
